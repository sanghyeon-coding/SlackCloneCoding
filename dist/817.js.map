{"version":3,"file":"817.js","mappings":"gqCAoFA,UA5Ec,WACZ,OAA0CA,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAjDC,EAAd,EAAQC,KAAuBC,GAA/B,EAAwBC,MAAxB,EAA+BD,QAC/B,KAAoCE,EAAAA,EAAAA,WAAS,GAA7C,GAAOC,EAAP,KAAmBC,EAAnB,KACA,KAA+BC,EAAAA,EAAAA,GAAS,IAAxC,GAAOC,EAAP,KAAcC,EAAd,KACA,KAAqCF,EAAAA,EAAAA,GAAS,IAA9C,GAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEC,iBACFT,GAAc,GACdU,IAAAA,KACQ,mBAAoB,CAAER,MAAAA,EAAOE,SAAAA,GAAY,CAAEO,iBAAiB,IACjEC,MAAK,SAACC,GACLjB,EAAOiB,EAASlB,MAAM,MAEvBmB,OAAM,SAACjB,GAAU,QAChBG,EAA6C,OAA/B,UAAAH,EAAMgB,gBAAN,mBAAgBlB,YAAhB,eAAsBoB,YAG1C,CAACb,EAAON,EAAQQ,IAalB,YAAiBY,IAAbtB,EACK,qCAILA,GACFuB,QAAQC,IAAI,WAAYxB,GACjB,gBAAC,KAAD,CAAUyB,GAAG,kCAWpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,kBACA,gBAAC,KAAD,CAAMd,SAAUA,GACd,gBAAC,KAAD,CAAOc,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQC,MAAOrB,EAAOsB,SAAUrB,MAGxE,gBAAC,KAAD,CAAOiB,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWC,MAAOnB,EAAUoB,SAAUnB,KAEjFN,GAAc,gBAAC,KAAD,kCAEjB,gBAAC,KAAD,CAAQsB,KAAK,UAAb,QAEF,gBAAC,KAAD,sBAEE,gBAAC,KAAD,CAAMF,GAAG,WAAT","sources":["webpack://sleact-ts-front/./pages/Login/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '@pages/SignUp/styles';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport useSWR, { mutate } from 'swr'; // 범용적으로 쓸 수 있는 mutate (전역)\n\nconst Login = () => {\n  const { data: userData, error, mutate } = useSWR('/api/users', fetcher);\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post('/api/users/login', { email, password }, { withCredentials: true })\n        .then((response) => {\n          mutate(response.data, false);\n        })\n        .catch((error) => {\n          setLogInError(error.response?.data?.code === 401);\n        });\n    },\n    [email, mutate, password],\n  );\n\n  /*\n  const name = '김상현';\n\n  const obj = {\n    name: '김승원',\n    company: '사람과숲',\n  };\n  const { name: objName, company } = obj; // 객체 구조분해\n   */\n\n  if (userData === undefined) {\n    return <div>로딩중...</div>;\n  }\n\n  // 로그인 성공으로 mutate에 내 정보가 들어가게되면\n  if (userData) {\n    console.log('로그인 됨~~1', userData);\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n    console.log('로그인 됨~~2');\n  }\n\n  // console.log(error, userData);\n  // if (!error && userData) {\n  //   console.log('로그인됨', userData);\n  //   return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  // }\n\n  return (\n    <div id=\"container\">\n      <Header>sanghyeon</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n      <LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <Link to=\"/signup\">회원가입 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["useSWR","fetcher","userData","data","mutate","error","useState","logInError","setLogInError","useInput","email","onChangeEmail","password","onChangePassword","onSubmit","useCallback","e","preventDefault","axios","withCredentials","then","response","catch","code","undefined","console","log","to","id","type","name","value","onChange"],"sourceRoot":""}