{"version":3,"file":"319.js","mappings":"gqCAsIA,UA3He,WACb,OAA0CA,EAAAA,EAAAA,IAAO,aAAcC,EAAAA,GAAjDC,EAAd,EAAQC,KACR,GADA,EAAwBC,MAAxB,EAA+BC,OAC/B,GAA+BC,EAAAA,EAAAA,GAAS,IAAxC,IAAOC,EAAP,KAAcC,EAAd,KACA,KAAqCF,EAAAA,EAAAA,GAAS,IAA9C,GAAOG,EAAP,KAAiBC,EAAjB,KACA,KAAgCC,EAAAA,EAAAA,UAAS,IAAzC,GAAOC,EAAP,KAAiBC,EAAjB,KACA,KAA0CF,EAAAA,EAAAA,UAAS,IAAnD,GAAOG,EAAP,KAAsBC,EAAtB,KAEA,KAA0CJ,EAAAA,EAAAA,WAAS,GAAnD,GAAOK,EAAP,KAAsBC,EAAtB,KAGA,KAAsCN,EAAAA,EAAAA,UAAS,IAA/C,GAAOO,EAAP,KAAoBC,EAApB,KACA,KAA0CR,EAAAA,EAAAA,WAAS,GAAnD,GAAOS,EAAP,KAAsBC,EAAtB,KAUMC,GAAmBC,EAAAA,EAAAA,cACvB,SAACC,GACCX,EAAYW,EAAEC,OAAOC,OACrBT,EAAiBO,EAAEC,OAAOC,QAAUZ,KAEtC,CAACA,IAGGa,GAAwBJ,EAAAA,EAAAA,cAC5B,SAACC,GACCT,EAAiBS,EAAEC,OAAOC,OAC1BT,EAAiBO,EAAEC,OAAOC,QAAUd,KAEtC,CAACA,IAGGgB,GAAWL,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEK,iBAGGb,IACHc,QAAQC,IAAI,cACZZ,EAAe,IACfE,GAAiB,GACjBW,IAAAA,KACQ,aAAc,CAClBzB,MAAAA,EACAE,SAAAA,EACAG,SAAAA,IAEDqB,MAAK,SAACC,GACLJ,QAAQC,IAAIG,GACZb,GAAiB,MAElBc,OAAM,SAAC/B,GACN0B,QAAQC,IAAI3B,EAAM8B,UAClBf,EAAef,EAAM8B,SAAS/B,SAE/BiC,SAAQ,kBAGf,CAAC7B,EAAOE,EAAUG,EAAUI,IAG9B,YAAiBqB,IAAbnC,EACK,qCAILA,EACK,gBAAC,KAAD,CAAUoC,GAAG,iCAIpB,uBAAKC,GAAG,aACN,gBAAC,KAAD,WACA,gBAAC,KAAD,CAAMX,SAAUA,GACd,gBAAC,KAAD,CAAOW,GAAG,eACR,sCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQf,MAAOnB,EAAOmC,SAAUlC,MAGxE,gBAAC,KAAD,CAAO+B,GAAG,kBACR,mCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,OAAOD,GAAG,WAAWE,KAAK,WAAWf,MAAOjB,EAAUiC,SAAUhC,MAGhF,gBAAC,KAAD,CAAO6B,GAAG,kBACR,oCACA,2BACE,gBAAC,KAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWf,MAAOd,EAAU8B,SAAUpB,MAGpF,gBAAC,KAAD,CAAOiB,GAAG,wBACR,uCACA,2BACE,gBAAC,KAAD,CACEC,KAAK,WACLD,GAAG,iBACHE,KAAK,iBACLf,MAAOZ,EACP4B,SAAUf,IACT,KAEJX,GAAiB,gBAAC,KAAD,0BAChBP,GAAY,gBAAC,KAAD,qBACbS,GAAe,gBAAC,KAAD,KAAQA,GACvBE,GAAiB,gBAAC,KAAD,6BAEpB,gBAAC,KAAD,CAAQoB,KAAK,UAAb,SAEF,gBAAC,KAAD,mBAEE,gBAAC,KAAD,CAAMF,GAAG,UAAT","sources":["webpack://sleact-ts-front/./pages/SignUp/index.tsx"],"sourcesContent":["import useInput from '@hooks/useInput';\n// import fetcher from '@utils/fetcher';\n// import React, { useCallback, useState, VFC } from 'react';\nimport axios from 'axios';\n// import useSWR from 'swr';\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from './styles';\nimport { Link, Redirect } from 'react-router-dom';\nimport React, { useCallback, useState } from 'react';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\n\nconst SignUp = () => {\n  const { data: userData, error, mutate } = useSWR('/api/users', fetcher);\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, setPassword] = useState('');\n  const [passwordCheck, setPasswordCheck] = useState('');\n\n  const [mismatchError, setMismatchError] = useState(false);\n  // 비밀번호가 둘이 다르면 false가 true가 됩니다.\n\n  const [signUpError, setSignUpError] = useState('');\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n\n  // const onChangeEmail = useCallback((e) => {\n  //   setEmail(e.target.value);\n  // }, []);\n  //\n  // const onChangeNickname = useCallback((e) => {\n  //   setNickname(e.target.value);\n  // }, []);\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n      setMismatchError(e.target.value !== passwordCheck);\n    },\n    [passwordCheck],\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(e.target.value !== password);\n    },\n    [password],\n  );\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      // console.log(email, nickname, password, passwordCheck);\n\n      if (!mismatchError) {\n        console.log('서버로 회원가입하기');\n        setSignUpError(''); // 현재 시점에서 초기화를 한 번 해주는 것이 좋음\n        setSignUpSuccess(false); // 현재 시점에서 초기화를 한 번 해주는 것이 좋음\n        axios\n          .post('/api/users', {\n            email,\n            nickname,\n            password,\n          })\n          .then((response) => {\n            console.log(response);\n            setSignUpSuccess(true);\n          })\n          .catch((error) => {\n            console.log(error.response);\n            setSignUpError(error.response.data);\n          })\n          .finally(() => {});\n      }\n    },\n    [email, nickname, password, mismatchError],\n  );\n\n  if (userData === undefined) {\n    return <div>로딩중...</div>;\n  }\n\n  // if문은 항상 여기에 자리해야 함 (return은 항상 hooks보다 아래 있어야합니다.)\n  if (userData) {\n    return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n  }\n\n  return (\n    <div id=\"container\">\n      <Header>SH</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />{' '}\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>{signUpError}</Error>}\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <LinkContainer>\n        이미 회원이신가요?&nbsp;\n        <Link to=\"/login\">로그인 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"names":["useSWR","fetcher","userData","data","error","mutate","useInput","email","onChangeEmail","nickname","onChangeNickname","useState","password","setPassword","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","console","log","axios","then","response","catch","finally","undefined","to","id","type","name","onChange"],"sourceRoot":""}