{"version":3,"file":"581.js","mappings":"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","sources":["webpack://sleact-ts-front/./layouts/Workspace/styles.tsx","webpack://sleact-ts-front/./components/Menu/styles.tsx","webpack://sleact-ts-front/./components/Menu/index.tsx","webpack://sleact-ts-front/./components/Modal/styles.tsx","webpack://sleact-ts-front/./components/Modal/index.tsx","webpack://sleact-ts-front/./components/CreateChannelModal/index.tsx","webpack://sleact-ts-front/./components/inviteWorkspaceModal/index.tsx","webpack://sleact-ts-front/./components/DMList/styles.tsx","webpack://sleact-ts-front/./hooks/useSocket.ts","webpack://sleact-ts-front/./components/DMList/index.tsx","webpack://sleact-ts-front/./components/EachChannel/index.tsx","webpack://sleact-ts-front/./components/ChannelList/index.tsx","webpack://sleact-ts-front/./layouts/Workspace/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n  & img {\n    display: flex;\n  }\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    &.selected {\n      color: white;\n    }\n  }\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n  & h2 {\n    padding-left: 20px;\n  }\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import React, { CSSProperties, FC, useCallback } from 'react';\nimport { CloseModalButton, CreateMenu } from './styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: (e: any) => void;\n  style: CSSProperties;\n  closeButton?: boolean;\n}\nconst Menu: FC<Props> = ({ children, style, show, onCloseModal, closeButton }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) return null;\n\n  return (\n    <CreateMenu onClick={onCloseModal}>\n      <div style={style} onClick={stopPropagation}>\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\n        {children}\n      </div>\n    </CreateMenu>\n  );\n};\n\nMenu.defaultProps = {\n  closeButton: true,\n};\n\nexport default Menu;\n","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import React, { FC, useCallback } from 'react';\nimport { CloseModalButton, CreateModal } from '@components/Modal/styles';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\nconst Modal: FC<Props> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import React, { FC, useCallback } from 'react';\nimport Modal from '@components/Modal';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport useInput from '@hooks/useInput';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { IChannel, IUser } from '@typings/db';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateChannelModal: (flag: boolean) => void;\n}\n\nconst CreateChannelModal: FC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\n\n  const { data: userData, error, mutate } = useSWR<IUser | false>('/api/users', fetcher, { dedupingInterval: 2000 });\n  const { data: channelData, mutate: mutateChannel } = useSWR<IChannel[]>(\n    userData ? `/api/workspaces/${workspace}/channels` : null,\n    fetcher,\n  );\n\n  const onCreateChannel = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .post(`/api/workspaces/${workspace}/channels`, { name: newChannel }, { withCredentials: true })\n        .then(() => {\n          setShowCreateChannelModal(false);\n          mutateChannel(); // 생성하자마자 channel list 다시 불러오기\n          setNewChannel('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newChannel],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onCreateChannel}>\n        <Label id=\"channel-label\">\n          <span>채널 이름</span>\n          <Input id=\"workspace\" value={newChannel} onChange={onChangeNewChannel} />\n        </Label>\n        <Button type=\"submit\">생성하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CreateChannelModal;\n","import Modal from '@components/Modal';\nimport useInput from '@hooks/useInput';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { FC, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\n}\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\n  const { mutate: revalidateMember } = useSWR<IUser[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n\n  const onInviteMember = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      // input창 검사\n      if (!newMember || !newMember.trim()) {\n        return;\n      }\n\n      axios\n        // api에 적힌대로 email 적어서 보내주면됨\n        .post(`/api/workspaces/${workspace}/members`, {\n          email: newMember,\n        })\n        // 초대가 완료되면 revalidate함\n        // revalidate 대신 mutete를 사용하고 싶다면? mutate(response.data, false);\n        .then(() => {\n          revalidateMember();\n          setShowInviteWorkspaceModal(false);\n          setNewMember('');\n        })\n        .catch((error) => {\n          console.dir(error);\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newMember, workspace, revalidateMember, setShowInviteWorkspaceModal, setNewMember],\n  );\n\n  return (\n    <Modal show={show} onCloseModal={onCloseModal}>\n      <form onSubmit={onInviteMember}>\n        <Label id=\"member-label\">\n          <span>이메일</span>\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\n        </Label>\n        <Button type=\"submit\">초대하기</Button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default InviteWorkspaceModal;\n","import styled from '@emotion/styled';\n\n// 클릭하면 자식 요소들이 접혔다가 펴지는 버튼 (collapse button)\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import { io, Socket } from 'socket.io-client';\nimport { useCallback } from 'react';\n\nconst backUrl = 'http://localhost:3095';\n\nconst sockets: { [key: string]: Socket } = {};\nconst useSocket = (workspace?: string): [Socket | undefined, () => void] => {\n  console.log('rerender : ', workspace);\n  const disconnect = useCallback(() => {\n    if (workspace) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, []);\n\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[workspace]) {\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, { transports: ['websocket'] });\n  }\n  // sockets[workspace].emit('hello', 'world');\n  // sockets[workspace].on('message', (data) => {\n  //   console.log(data);\n  // });\n  // sockets[workspace].on('data', (data) => {\n  //   console.log(data);\n  // });\n  // sockets[workspace].on('onlineList', (data) => {\n  //   console.log(data);\n  // });\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;\n","// import EachDM from '@components/EachDM';\n// import useSocket from '@hooks/useSocket';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { IDM, IUser, IUserWithOnline } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { CollapseButton } from '@components/DMList/styles';\nimport useSocket from '@hooks/useSocket';\n\nconst DMList: FC = () => {\n  // ++ 라우터 파라미터\n  const { workspace } = useParams<{ workspace?: string }>();\n\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n\n  // ++ 워크스페이스에 참여한 멤버들 불러오기\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n\n  // ++ collapse button의 상태 (true면 접혔다가 false면 펴짐)\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [countList, setCountList] = useState<{ [key: string]: number }>({});\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  const resetCount = useCallback(\n    (id) => () => {\n      setCountList((List) => {\n        return {\n          ...List,\n          [id]: 0,\n        };\n      });\n    },\n    [],\n  );\n\n  const onMessage = (data: IDM) => {\n    console.log('dm왔다', data);\n    setCountList((list) => {\n      return {\n        ...list,\n        [data.SenderId]: list[data.SenderId] ? list[data.SenderId] + 1 : 1,\n      };\n    });\n  };\n\n  useEffect(() => {\n    console.log('DMList: workspace 바꼈다', workspace);\n    setOnlineList([]);\n    setCountList({});\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    // socket?.on('dm', onMessage);\n    // console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      // socket?.off('dm', onMessage);\n      // console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Direct Messages</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            const count = countList[member.id] || 0;\n            return (\n              <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\n                <i\n                  className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n                    isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n                  }`}\n                  aria-hidden=\"true\"\n                  data-qa=\"presence_indicator\"\n                  data-qa-presence-self=\"false\"\n                  data-qa-presence-active=\"false\"\n                  data-qa-presence-dnd=\"false\"\n                />\n                <span>{member.nickname}</span>\n                {member.id === userData?.id && <span>(나)</span>}\n                {count > 0 && <span className=\"count\">{count}</span>}\n              </NavLink>\n            );\n            // <EachDM key={member.id} member={member} isOnline={isOnline} />;\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","import { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface Props {\n  channel: IChannel;\n}\nconst EachChannel: VFC<Props> = ({ channel }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    userData ? `/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, channel]);\n\n  return (\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}># {channel.name}</span>\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\n    </NavLink>\n  );\n};\n\nexport default EachChannel;\n","import { CollapseButton } from '@components/DMList/styles';\nimport EachChannel from '@components/EachChannel';\nimport { IChannel, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { useLocation } from 'react-router-dom';\n\nconst ChannelList: FC = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const {\n    data: userData,\n    error,\n    mutate,\n  } = useSWR<IUser>('/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          channelData?.map((channel) => {\n            return <EachChannel key={channel.id} channel={channel} />;\n          })}\n      </div>\n    </>\n  );\n};\n// OCTOBER NEW SUPREME SYSTEM\nexport default ChannelList;\n","import React, { useCallback, FC, useState, useEffect } from 'react';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport { Link, Redirect, Route, Switch, useParams } from 'react-router-dom';\nimport gravatar from 'gravatar';\nimport { toast } from 'react-toastify';\n\nimport {\n  Header,\n  RightMenu,\n  ProfileImg,\n  WorkspaceWrapper,\n  Workspaces,\n  Channels,\n  Chats,\n  WorkspaceName,\n  MenuScroll,\n  ProfileModal,\n  LogOutButton,\n  WorkspaceButton,\n  AddButton,\n  WorkspaceModal,\n} from '@layouts/Workspace/styles';\n\nimport loadable from '@loadable/component';\nimport Menu from '@components/Menu';\nimport { IChannel, IUser } from '@typings/db';\nimport { Button, Input, Label } from '@pages/SignUp/styles';\nimport useInput from '@hooks/useInput';\nimport Modal from '@components/Modal';\nimport CreateChannelModal from '@components/CreateChannelModal';\nimport InviteWorkspaceModal from '@components/inviteWorkspaceModal';\n// import InviteChannelModal from '@components/InviteChannelModal';\nimport DMList from '@components/DMList';\nimport ChannelList from '@components/ChannelList';\nimport useSocket from '@hooks/useSocket';\n\nconst Channel = loadable(() => import('@pages/Channel'));\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\n\n// {children}을 사용하는 component의 경우 :FC (FC라는 type안에 children이 알아서 들어있음)\n// {children}을 사용하지 않는 component의 경우 :VFC\nconst Workspace: FC = () => {\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\n  // const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\n  const [newUrl, onChangeNewUrl, setNewUrl] = useInput('');\n\n  /*\n  workspace가져오기 : 내가 지금 어디에 있는지?\n  \"현재 내 워크 스페이스에 있는 채널 다 가져오세요.\"\n  앞에 userData? 가 붙어있고, 뒤에 : null이 들어있음\n  로그인 하지 않았으면 null로감 (swr이 요청을 보내지 않고, 내가 로그인한 상태일때만 요청할 수 있도록 : 조건부요청 , swr이 조건부 요청을 지원함)\n\n  내가 로그인 했을 때만 채널을 가져오고, 로그인 하지 않으면 채널을 가져오지 않음\n  */\n\n  const { workspace } = useParams<{ workspace: string }>();\n  const { data: userData, error, mutate } = useSWR<IUser | false>('/api/users', fetcher, { dedupingInterval: 2000 });\n  // const { data: userData, mutate: revalidateUser } = useSWR<IUser | false>('/api/users', fetcher);\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\n  const { data: memberData } = useSWR<IUser[]>(userData ? `/api/workspaces/${workspace}/members` : null, fetcher);\n  const [socket, disconnect] = useSocket(workspace);\n\n  useEffect(() => {\n    // socket?.on('message', (data) => {});\n    // socket?.emit();\n    // disconnect();\n\n    if (channelData && userData && socket) {\n      console.log('socket : ', socket);\n      socket.emit('login', { id: userData.id, channels: channelData.map((v: any) => v.id) });\n    }\n  }, [socket, channelData, userData]);\n\n  // 연결을 끊어줄 때 (workspace가 바뀔 때)\n  useEffect(() => {\n    return () => {\n      disconnect();\n    };\n  }, [workspace, disconnect]);\n\n  const onLogout = useCallback(() => {\n    axios\n      .post('/api/users/logout', null, { withCredentials: true })\n      .then(() => {\n        // mutate(false);\n      })\n      .catch(() => {});\n  }, []);\n\n  const onCloseUserProfile = useCallback((e) => {\n    e.stopPropagation();\n    setShowUserMenu(false);\n  }, []);\n\n  // 토글함수\n  const onClickUserProfile = useCallback(() => {\n    setShowUserMenu((prev) => !prev);\n  }, []);\n\n  const onClickCreateWorkspace = useCallback(() => {\n    setShowCreateWorkspaceModal(true);\n  }, []);\n\n  const onCreateWorkspace = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!newWorkspace || !newWorkspace.trim()) return;\n      if (!newUrl || !newUrl.trim()) return;\n      // .trim : 띄어쓰기 막기\n      // if (!newWorkspace) return; 만 작성하면 띄어쓰기 한 번만 해도 검사 통과함\n\n      axios\n        .post('/api/workspaces', { workspace: newWorkspace, url: newUrl }, { withCredentials: true })\n        .then(() => {\n          // mutate();\n          setShowCreateWorkspaceModal(false);\n          setNewWorkspace(''); // submit 완료 후 input창 비우기 (비우지 않으면 이전에 값들이 남아있음)\n          setNewUrl(''); // submit 완료 후 input창 비우기 (비우지 않으면 이전에 값들이 남아있음)\n        })\n        .catch((error) => {\n          console.dir(error);\n          // error가 발생하면 아래에서 에러메세지가 튀어나오는 토스트 라이브러리 사용하기 (npm i react-toastify)\n          toast.error(error.response?.data, { position: 'bottom-center' });\n        });\n    },\n    [newWorkspace, newUrl],\n  );\n\n  // 화면에 떠있는 모든 모달을 닫는 메서드\n  const onCloseModal = useCallback(() => {\n    setShowCreateWorkspaceModal(false);\n    setShowCreateChannelModal(false);\n    // setShowInviteChannelModal(false);\n    setShowWorkspaceModal(false);\n  }, []);\n\n  const toggleWorkspaceModal = useCallback(() => {\n    setShowWorkspaceModal((prev) => !prev);\n  }, []);\n\n  const onClickAddChannel = useCallback(() => {\n    setShowCreateChannelModal(true);\n  }, []);\n\n  const onClickInviteWorkspace = useCallback(() => {\n    setShowInviteWorkspaceModal(true);\n  }, []);\n\n  // 승원대리님 추가지점 -------------------\n  if (userData === undefined) {\n    return <div>로딩중...</div>;\n  }\n  // ---------------------------- 여기까지\n\n  if (!userData) {\n    alert('야 안 된다');\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <Header>\n        <RightMenu>\n          <span onClick={onClickUserProfile}>\n            <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\n            {showUserMenu && (\n              <Menu style={{ right: 0, top: 38 }} show={showUserMenu} onCloseModal={onCloseUserProfile}>\n                <ProfileModal>\n                  <img src={gravatar.url(userData.email, { s: '36px', d: 'retro' })} alt={userData.nickname} />\n                  <div>\n                    <span id=\"profile-name\">{userData.nickname}</span>\n                    <span id=\"profile-active\">Active</span>\n                  </div>\n                </ProfileModal>\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n              </Menu>\n            )}\n          </span>\n        </RightMenu>\n      </Header>\n      <WorkspaceWrapper>\n        <Workspaces>\n          {userData?.Workspaces &&\n            userData?.Workspaces.map((ws) => {\n              return (\n                <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\n                  <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\n                </Link>\n              );\n            })}\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\n        </Workspaces>\n        <Channels>\n          <WorkspaceName onClick={toggleWorkspaceModal}>Sleact</WorkspaceName>\n          <MenuScroll>\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\n              <WorkspaceModal>\n                <h2>Sleact~</h2>\n                <button onClick={onClickInviteWorkspace}>워크스페이스에 사용자 초대</button>\n                <button onClick={onClickAddChannel}>채널 만들기</button>\n                <button onClick={onLogout}>로그아웃</button>\n              </WorkspaceModal>\n            </Menu>\n            <ChannelList />\n            <DMList />\n\n            {/*채널목록*/}\n            {/*{channelData?.map((v: any) => (*/}\n            {/*  <div>{v.name}</div>*/}\n            {/*))}*/}\n            {/*? : 없을 수도 있는 것에는 항상 물음표를 사용해줌 (타입스크립트 뿐만 아니라 자바스크립트에서도 지원함)*/}\n          </MenuScroll>\n        </Channels>\n        <Chats>\n          <Switch>\n            <Route exact path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\n            <Route exact path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\n          </Switch>\n        </Chats>\n      </WorkspaceWrapper>\n      {/*{children}*/}\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\n        <form onSubmit={onCreateWorkspace}>\n          <Label id=\"workspace-label\">\n            <span>워크스페이스 이름</span>\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\n          </Label>\n          <Label id=\"workspace-url-label\">\n            <span>워크스페이스 url</span>\n            <Input id=\"workspace\" value={newUrl} onChange={onChangeNewUrl} />\n          </Label>\n          <Button type=\"submit\">생성하기</Button>\n        </form>\n      </Modal>\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateChannelModal={setShowCreateChannelModal}\n      />\n      <InviteWorkspaceModal\n        show={showInviteWorkspaceModal}\n        onCloseModal={onCloseModal}\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\n      />\n      {/*<InviteChannelModal*/}\n      {/*  show={showInviteChannelModal}*/}\n      {/*  onCloseModal={onCloseModal}*/}\n      {/*  setShowInviteChannelModal={setShowInviteChannelModal}*/}\n      {/*/>*/}\n    </div>\n  );\n};\n\nexport default Workspace;\n"],"names":["RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","CreateMenu","CloseModalButton","Menu","children","style","show","onCloseModal","closeButton","stopPropagation","useCallback","e","onClick","defaultProps","CreateModal","setShowCreateChannelModal","useInput","newChannel","onChangeNewChannel","setNewChannel","useParams","workspace","channel","useSWR","fetcher","dedupingInterval","userData","data","error","mutate","mutateChannel","onCreateChannel","preventDefault","axios","name","withCredentials","then","catch","console","dir","toast","response","position","onSubmit","id","value","onChange","type","setShowInviteWorkspaceModal","newMember","onChangeNewMember","setNewMember","revalidateMember","onInviteMember","trim","email","CollapseButton","collapse","sockets","log","disconnect","io","transports","undefined","memberData","socket","useSocket","useState","channelCollapse","setChannelCollapse","countList","setCountList","onlineList","setOnlineList","toggleChannelCollapse","prev","List","useEffect","on","off","className","map","member","isOnline","includes","count","key","activeClassName","to","nickname","location","useLocation","date","localStorage","getItem","pathname","channelData","Channel","loadable","DirectMessage","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newUrl","onChangeNewUrl","setNewUrl","emit","channels","v","onLogout","onCloseUserProfile","onClickUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteWorkspace","src","gravatar","s","d","alt","right","top","ws","slice","toUpperCase","left","exact","path","component","alert"],"sourceRoot":""}